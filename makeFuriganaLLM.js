const fs = require('fs').promises;
const axios = require('axios');

const getJapaneseWordsForObject = async inputObjects => {
  try {
    const dataToWrite = [];

    for (const word of inputObjects) {
      const prompt = `what is the japanese kanji for the ${word} ? Only return an object { kanji: "the kanji for the word" }`;

      const response = await axios.post('http://localhost:11434/api/generate', {
        model: 'llama3.1:8b',
        stream: false,
        prompt
      });

      console.log(`Ollama Local Response for ${word}:`, response.data);

      // Extract information from the response
      console.log(response.data.response);
      dataToWrite.push(response.data.response);
    }

    // Write the extracted data to a JSON file
    await fs.writeFile('output.json', JSON.stringify(dataToWrite, null, 2));
    console.log('Data has been written to output.json');
  } catch (error) {
    console.error('Error making local API request to Ollama:', error.message);
  }
};

// Extract the new word information

// Example input objects (replace this with your actual input)
const inputObjects = [
  'lake',
  'cloud',
  'weather'
  // 'day',
  // 'year',
  // 'month',
  // 'week',
  // 'hour',
  // 'minute',
  // 'second',
  // 'chair',
  // 'desk',
  // 'bed',
  // 'table',
  // 'computer',
  // 'phone',
  // 'internet',
  // 'game',
  // 'sport',
  // 'music',
  // 'picture',
  // 'camera',
  // 'photo',
  // 'bookshelf',
  // 'shelf',
  // 'box',
  // 'container',
  // 'bottle',
  // 'plate',
  // 'bowl',
  // 'spoon',
  // 'knife',
  // 'coffee',
  // 'tea',
  // 'milk',
  // 'bread',
  // 'fruit',
  // 'vegetable',
  // 'garden',
  // 'park',
  // 'street',
  // 'building',
  // 'room',
  // 'door',
  // 'window',
  // 'bed',
  // 'pillow',
  // 'blanket',
  // 'carpet',
  // 'sofa',
  // 'chair',
  // 'glass',
  // 'cup',
  // 'fork',
  // 'paper',
  // 'pen',
  // 'pencil',
  // 'eraser',
  // 'ruler',
  // 'glue',
  // 'tape',
  // 'scissors',
  // 'magazine',
  // 'newspaper',
  // 'tV',
  // 'radio',
  // 'computer',
  // 'phone',
  // 'camera',
  // 'flashlight',
  // 'battery',
  // 'charger',
  // 'clock',
  // 'calendar',
  // 'diary',
  // 'journal',
  // 'penpal',
  // 'friend',
  // 'family',
  // 'parent',
  // 'child',
  // 'brother',
  // 'sister',
  // 'cousin',
  // 'uncle',
  // 'aunt',
  // 'nephew',
  // 'niece',
  // 'grandparent',
  // 'grandchild',
  // 'neighbor',
  // 'colleague',
  // 'tree',
  // 'flower',
  // 'garden',
  // 'park',
  // 'street',
  // 'building',
  // 'room',
  // 'door',
  // 'window',
  // 'bed',
  // 'pillow',
  // 'blanket',
  // 'carpet',
  // 'sofa',
  // 'chair',
  // 'tablecloth',
  // 'plate',
  // 'glass',
  // 'cup',
  // 'spoon',
  // 'fork',
  // 'knife',
  // 'cloud',
  // 'weather',
  // 'storm',
  // 'rain',
  // 'sunshine',
  // 'moonlight',
  // 'starlight',
  // 'mountain',
  // 'river',
  // 'lake',
  // 'ocean',
  // 'sea',
  // 'shore',
  // 'beach',
  // 'island',
  // 'compass',
  // 'map',
  // 'guidebook',
  // 'tourist',
  // 'traveler',
  // 'passport',
  // 'visa',
  // 'plane',
  // 'train',
  // 'car',
  // 'bus',
  // 'taxi',
  // 'hotel',
  // 'restaurant',
  // 'cafe',
  // 'shop',
  // 'market',
  // 'store',
  // 'warehouse',
  // 'office',
  // 'chair',
  // 'table',
  // 'bed',
  // 'desk',
  // 'computer',
  // 'phone',
  // 'camera',
  // 'book',
  // 'magazine',
  // 'newspaper',
  // 'pen',
  // 'pencil',
  // 'eraser',
  // 'paper',
  // 'file',
  // 'folder',
  // 'shelf',
  // 'drawer',
  // 'closet',
  // 'mirror',
  // 'window',
  // 'door',
  // 'ceiling',
  // 'wall',
  // 'floor',
  // 'carpet',
  // 'rug',
  // 'pillow',
  // 'mattress',
  // 'blinds',
  // 'fan',
  // 'air',
  // 'conditioner',
  // 'heater',
  // 'lamp',
  // 'light',
  // 'bulb',
  // 'switch',
  // 'plug',
  // 'socket',
  // 'cord',
  // 'wire',
  // 'battery',
  // 'charger',
  // 'adapter',
  // 'power',
  // 'source',
  // 'generator',
  // 'motor',
  // 'engine',
  // 'gearbox',
  // 'transmission',
  // 'axle'
];

// Make the API requests for each input object
getJapaneseWordsForObject(inputObjects);
